apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: docker pull ghcr.io/home-assistant/home-assistant:2025.3.1
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8123
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 2
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
        env:
        - name: TZ
          value: Europe/Moscow
        volumeMounts:
        - mountPath: /config
          name: {{ .Release.Name }}-data
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-data
    spec:
      accessModes:
      - "ReadWriteMany"
      storageClassName: longhorn-default
      resources:
        requests:
          storage: 10Gi
